"use strict";(self.webpackChunkGenLV=self.webpackChunkGenLV||[]).push([[612],{612:(L,b,M)=>{M.r(b),M.d(b,{VectorToGraphComponent:()=>N});var C=M(177),m=M(341),t=M(540);function v(r,h){if(1&r){const e=t.RV6();t.j41(0,"div",2)(1,"label",11),t.EFF(2,"Rows:"),t.k0s(),t.j41(3,"input",12),t.bIt("ngModelChange",function(i){t.eBV(e);const n=t.XpG();return t.Njj(n.rows=i)}),t.k0s(),t.j41(4,"label",13),t.EFF(5,"Columns:"),t.k0s(),t.j41(6,"input",14),t.bIt("ngModelChange",function(i){t.eBV(e);const n=t.XpG();return t.Njj(n.cols=i)}),t.k0s()()}if(2&r){const e=t.XpG();t.R7$(3),t.Y8G("ngModel",e.rows),t.R7$(3),t.Y8G("ngModel",e.cols)}}function y(r,h){if(1&r&&(t.j41(0,"div",15),t.EFF(1),t.k0s()),2&r){const e=t.XpG();t.R7$(1),t.JRh(e.error)}}function P(r,h){if(1&r&&(t.qSk(),t.qex(0),t.nrm(1,"circle",31)(2,"circle",32),t.bVm()),2&r){const e=t.XpG().$implicit,o=t.XpG(2);t.R7$(1),t.BMQ("cx",o.nodeCoords[e].x)("cy",o.nodeCoords[e].y)("fill",o.bipartiteLayout?o.isNodeLeft(e)?"#E3F2FD":"#E8F5E8":o.nodeColors[e%o.nodeColors.length])("stroke",o.bipartiteLayout?o.isNodeLeft(e)?"#2196F3":"#4CAF50":"#1976d2"),t.R7$(1),t.BMQ("cx",o.nodeCoords[e].x)("cy",o.nodeCoords[e].y)}}function k(r,h){if(1&r&&(t.qSk(),t.j41(0,"g"),t.DNE(1,P,3,6,"ng-container",28),t.k0s()),2&r){const e=h.$implicit,o=t.XpG(2);t.R7$(1),t.Y8G("ngIf",o.nodes[e])}}function I(r,h){if(1&r&&(t.qSk(),t.qex(0),t.nrm(1,"line",35),t.bVm()),2&r){const e=t.XpG().$implicit,o=t.XpG(2);t.R7$(1),t.BMQ("x1",o.getEdgePoint(o.nodeCoords[e.from].x,o.nodeCoords[e.from].y,o.nodeCoords[e.to].x,o.nodeCoords[e.to].y,18).x)("y1",o.getEdgePoint(o.nodeCoords[e.from].x,o.nodeCoords[e.from].y,o.nodeCoords[e.to].x,o.nodeCoords[e.to].y,18).y)("x2",o.getEdgePoint(o.nodeCoords[e.to].x,o.nodeCoords[e.to].y,o.nodeCoords[e.from].x,o.nodeCoords[e.from].y,18).x)("y2",o.getEdgePoint(o.nodeCoords[e.to].x,o.nodeCoords[e.to].y,o.nodeCoords[e.from].x,o.nodeCoords[e.from].y,18).y)("stroke",o.bipartiteLayout?"#666":"#1976d2")}}function S(r,h){if(1&r&&(t.qSk(),t.nrm(0,"path",37)),2&r){const e=t.XpG(2).$implicit,o=t.XpG(2);t.BMQ("d",o.getExpressiveLoopPath(o.nodeCoords[e.from].x,o.nodeCoords[e.from].y,e.from,o.nodes.length,28))}}function R(r,h){if(1&r&&(t.qSk(),t.DNE(0,S,1,1,"path",36)),2&r){const e=t.XpG(3);t.Y8G("ngIf",!e.bipartiteLayout&&e.hasReflexiveRelations)}}function F(r,h){if(1&r&&(t.qSk(),t.qex(0),t.DNE(1,I,2,5,"ng-container",33),t.DNE(2,R,1,1,"ng-template",null,34,t.C5r),t.bVm()),2&r){const e=h.$implicit,o=t.sdS(3);t.R7$(1),t.Y8G("ngIf",e.from!==e.to)("ngIfElse",o)}}function V(r,h){if(1&r&&(t.qSk(),t.j41(0,"g")(1,"text",38),t.EFF(2),t.k0s()()),2&r){const e=h.$implicit,o=t.XpG(2);t.R7$(1),t.BMQ("x",o.nodeCoords[e].x)("y",o.nodeCoords[e].y+6)("fill",o.bipartiteLayout?o.isNodeLeft(e)?"#2196F3":"#4CAF50":"#1976d2"),t.R7$(1),t.JRh(o.nodes[e])}}function G(r,h){if(1&r&&(t.j41(0,"th"),t.EFF(1),t.k0s()),2&r){const e=h.index,o=t.XpG(2);t.R7$(1),t.JRh(o.getBinaryIndexUnified(e))}}function O(r,h){if(1&r&&(t.j41(0,"td"),t.EFF(1),t.k0s()),2&r){const e=h.index,o=t.XpG().index,i=t.XpG(2);t.R7$(1),t.SpI(" ","1"===i.inputVector[o*i.cols+e]?"1":""," ")}}const w=function(){return[]};function B(r,h){if(1&r&&(t.j41(0,"tr")(1,"td",39),t.EFF(2),t.k0s(),t.DNE(3,O,2,1,"td",17),t.k0s()),2&r){const e=h.index,o=t.XpG(2);t.R7$(2),t.JRh(o.getBinaryIndexUnified(e)),t.R7$(1),t.Y8G("ngForOf",t.lJ4(2,w).constructor(o.cols))}}function E(r,h){1&r&&(t.j41(0,"small"),t.EFF(1,"(All vertices have self-loops)"),t.k0s())}function j(r,h){1&r&&(t.j41(0,"small"),t.EFF(1,"(2\xd72 matrices have no self-loops)"),t.k0s())}function T(r,h){if(1&r&&(t.j41(0,"div",40)(1,"div",41),t.EFF(2,"Partitions:"),t.k0s(),t.j41(3,"div",42),t.nrm(4,"span",43),t.j41(5,"strong"),t.EFF(6,"L:"),t.k0s(),t.EFF(7),t.k0s(),t.j41(8,"div",42),t.nrm(9,"span",44),t.j41(10,"strong"),t.EFF(11,"V:"),t.k0s(),t.EFF(12),t.k0s(),t.j41(13,"div",45)(14,"small"),t.EFF(15,"Note: Self-loops are hidden for bipartite graphs"),t.k0s()()()),2&r){const e=t.XpG(2);t.R7$(7),t.SpI(" ",e.leftPartition.join(", ")," "),t.R7$(5),t.SpI(" ",e.rightPartition.join(", ")," ")}}function $(r,h){if(1&r&&(t.j41(0,"div",16),t.qSk(),t.j41(1,"svg"),t.DNE(2,k,2,1,"g",17),t.DNE(3,F,4,2,"ng-container",17),t.DNE(4,V,3,4,"g",17),t.j41(5,"defs")(6,"marker",18),t.nrm(7,"path",19),t.k0s(),t.j41(8,"marker",20),t.nrm(9,"path",21),t.k0s()()(),t.joV(),t.j41(10,"div",22)(11,"div",23)(12,"div",24),t.EFF(13),t.k0s(),t.j41(14,"table")(15,"tr")(16,"th"),t.EFF(17,"Row\\Col"),t.k0s(),t.DNE(18,G,2,1,"th",17),t.k0s(),t.DNE(19,B,4,3,"tr",17),t.k0s()(),t.j41(20,"div",25)(21,"div",26),t.EFF(22,"Reflexive Relations:"),t.k0s(),t.j41(23,"div",27)(24,"strong"),t.EFF(25),t.k0s(),t.DNE(26,E,2,0,"small",28),t.DNE(27,j,2,0,"small",28),t.k0s()(),t.j41(28,"div",29)(29,"div",26),t.EFF(30,"Graph Structure:"),t.k0s(),t.j41(31,"div",27)(32,"strong"),t.EFF(33),t.k0s(),t.j41(34,"small"),t.EFF(35),t.k0s()()(),t.DNE(36,T,16,2,"div",30),t.k0s()()),2&r){const e=t.XpG();t.AVh("vertical-layout",e.useVerticalLayout),t.R7$(1),t.BMQ("width",e.svgSize)("height",e.svgSize),t.R7$(1),t.Y8G("ngForOf",e.visibleNodeIndices),t.R7$(1),t.Y8G("ngForOf",e.edges),t.R7$(1),t.Y8G("ngForOf",e.visibleNodeIndices),t.R7$(9),t.Lme("Matrix Representation (",e.rows,"\xd7",e.cols,")"),t.R7$(5),t.Y8G("ngForOf",t.lJ4(18,w).constructor(e.cols)),t.R7$(1),t.Y8G("ngForOf",t.lJ4(19,w).constructor(e.rows)),t.R7$(6),t.JRh(e.hasReflexiveRelations?"Yes":"No"),t.R7$(1),t.Y8G("ngIf",e.hasReflexiveRelations),t.R7$(1),t.Y8G("ngIf",!e.hasReflexiveRelations),t.R7$(6),t.SpI("",e.nodes.length," vertices"),t.R7$(2),t.Lme("",e.rows,"\xd7",e.cols," regular"),t.R7$(1),t.Y8G("ngIf",e.isBipartite)}}let N=(()=>{class r{constructor(){this.inputVector="",this.rows=2,this.cols=2,this.error="",this.showResult=!1,this.nodes=[],this.nodeCoords=[],this.svgSize=320,this.useVerticalLayout=!1,this.nodeColors=["#e3f2fd","#ffe0b2","#c8e6c9","#fff9c4","#f8bbd9","#d1c4e9","#b2dfdb","#f0f4c3"],this.isBipartite=!1,this.leftPartition=[],this.rightPartition=[],this.bipartiteLayout=!1,this.bipartiteVertical=!1,this.partitionByIndex=[],this.hasReflexiveRelations=!1,this.showSizeInputs=!1,this.lastVectorLength=0,this.hideIsolated=!1,this.visibleNodeIndices=[],this.hasIsolatedVertices=!1,this.edges=[],this.forceBipartite=!1}get Math(){return Math}getBinaryIndex(e,o){const i=Math.max(1,Math.ceil(Math.log2(o)));return e.toString(2).padStart(i,"0")}getBinaryIndexUnified(e){const o=Math.max(this.rows,this.cols),i=Math.max(1,Math.ceil(Math.log2(o)));return e.toString(2).padStart(i,"0")}isPowerOfTwo(e){return e>0&&0==(e&e-1)}determineMatrixSize(e){const o=Math.sqrt(e);if(Number.isInteger(o))this.rows=o,this.cols=o,this.showSizeInputs=!1;else if(this.showSizeInputs=!0,this.rows*this.cols!==e){const[i,n]=this.findBalancedFactors(e);this.rows=i,this.cols=n}}onVectorChange(){const e=this.inputVector.length;if(e!==this.lastVectorLength)if(this.lastVectorLength=e,this.isPowerOfTwo(e)&&e>0){const o=Math.sqrt(e);if(Number.isInteger(o))this.showSizeInputs=!1,this.rows=o,this.cols=o;else{this.showSizeInputs=!0;const[i,n]=this.findBalancedFactors(e);this.rows=i,this.cols=n}}else this.showSizeInputs=!1}findBalancedFactors(e){let o=[1,e],i=e-1;for(let n=1;n<=Math.sqrt(e);n++)if(e%n==0){const s=n,a=e/n,c=Math.abs(s-a);c<i&&(i=c,o=[s,a])}return o}generateNodeLabels(){if(this.nodes=[],this.shouldCreateBipartiteGraph()){const o=Math.max(1,Math.ceil(Math.log2(Math.max(this.rows,this.cols))));for(let i=0;i<this.rows;i++)this.nodes.push(i.toString(2).padStart(o,"0"));for(let i=0;i<this.cols;i++)this.nodes.push(i.toString(2).padStart(o,"0"))}else{const o=Math.max(this.rows,this.cols),i=Math.ceil(Math.log2(o));for(let n=0;n<o;n++)this.nodes.push(n.toString(2).padStart(i,"0"))}}shouldHaveReflexiveRelations(e,o){return!0}onConvert(){this.error="";const e=this.inputVector.length;if(!/^[01]+$/.test(this.inputVector)||e<1||e>1024)return this.error="The vector length must contain 1-1024 digits (0 or 1)",void(this.showResult=!1);if(!this.isPowerOfTwo(e))return this.error="The vector length must be a power of 2 (1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024)",void(this.showResult=!1);this.determineMatrixSize(e);const o=this.rows*this.cols;if(e!==o)return this.error=`Vector length (${e}) must equal rows \xd7 cols (${this.rows} \xd7 ${this.cols} = ${o})`,void(this.showResult=!1);this.generateNodeLabels(),this.hasReflexiveRelations=this.shouldHaveReflexiveRelations(this.rows,this.cols),this.checkBipartite(),this.adjustSvgSize(),this.generateCoordinates(),this.buildEdges(),this.computeVisibleNodes(),this.showResult=!0}adjustSvgSize(){const i=Math.max(this.rows,this.cols);this.svgSize=Math.max(320,100+45*i),this.useVerticalLayout=this.svgSize>600}checkBipartite(){const e=this.nodes.length;if(this.shouldCreateBipartiteGraph())if(this.isBipartite=!0,this.bipartiteLayout=!0,this.bipartiteVertical=this.rows!==this.cols||this.forceBipartite,this.partitionByIndex=new Array(this.nodes.length).fill(-1),this.leftPartition=[],this.rightPartition=[],this.bipartiteVertical){for(let i=0;i<this.rows;i++)this.partitionByIndex[i]=0,this.leftPartition.push(this.nodes[i]);for(let i=0;i<this.cols;i++){const n=this.rows+i;this.partitionByIndex[n]=1,this.rightPartition.push(this.nodes[n])}}else{for(let i=0;i<this.rows;i++)this.partitionByIndex[i]=0,this.leftPartition.push(this.nodes[i]);for(let i=0;i<this.cols;i++){const n=this.rows+i;this.partitionByIndex[n]=1,this.rightPartition.push(this.nodes[n])}}else this.isBipartite=!1,this.bipartiteLayout=!1,this.leftPartition=[],this.rightPartition=[],this.partitionByIndex=new Array(e).fill(-1)}shouldCreateBipartiteGraph(){return this.forceBipartite?this.rows!==this.cols?this.isPowerOfTwo(this.rows)&&this.isPowerOfTwo(this.cols):!(1===this.rows&&1===this.cols):this.rows===this.cols&&this.rows>1&&this.isFunctionalRowMapping()}isFunctionalRowMapping(){for(let e=0;e<this.rows;e++){let o=0;for(let i=0;i<this.cols;i++)if("1"===this.inputVector[e*this.cols+i]&&o++,o>1)return!1;if(1!==o)return!1}return!0}bfsCheckBipartite(e,o,i){const n=[o];for(i[o]=0;n.length>0;){const s=n.shift();for(let a=0;a<e.length;a++)if(e[s][a]&&a!==s)if(-1===i[a])i[a]=1-i[s],n.push(a);else if(i[a]===i[s])return!1}return!0}buildAdjacencyMatrix(){const e=this.nodes.length,o=Array(e).fill(null).map(()=>Array(e).fill(!1));if(this.shouldCreateBipartiteGraph())for(let n=0;n<this.rows;n++)for(let s=0;s<this.cols;s++)"1"===this.inputVector[n*this.cols+s]&&(o[n][this.rows+s]=!0);else for(let n=0;n<this.rows;n++)for(let s=0;s<this.cols;s++)"1"===this.inputVector[n*this.cols+s]&&(o[n][s]=!0);if(this.hasReflexiveRelations)for(let n=0;n<e;n++)o[n][n]=!0;return o}buildEdges(){if(this.edges=[],this.shouldCreateBipartiteGraph())for(let o=0;o<this.rows;o++)for(let i=0;i<this.cols;i++)"1"===this.inputVector[o*this.cols+i]&&this.edges.push({from:o,to:this.rows+i});else{const o=Math.max(this.rows,this.cols);for(let i=0;i<this.rows;i++)for(let n=0;n<this.cols;n++)"1"===this.inputVector[i*this.cols+n]&&this.edges.push({from:i%o,to:n%o})}}computeVisibleNodes(){const e=this.buildAdjacencyMatrix(),o=this.buildUndirectedNoLoopAdjacency(e),i=o.length;this.visibleNodeIndices=[];let n=0;for(let s=0;s<i;s++){let a=0;for(let c=0;c<i;c++)o[s][c]&&a++;0===a&&n++,(!this.hideIsolated||a>0)&&this.visibleNodeIndices.push(s)}this.hasIsolatedVertices=n>0}buildUndirectedNoLoopAdjacency(e){const o=e.length,i=Array(o).fill(null).map(()=>Array(o).fill(!1));for(let n=0;n<o;n++)for(let s=n+1;s<o;s++)(e[n][s]||e[s][n])&&(i[n][s]=!0,i[s][n]=!0);return i}generateCoordinates(){const e=this.nodes.length;if(this.bipartiteLayout)this.bipartiteVertical?this.generateBipartiteVerticalCoordinates():this.generateBipartiteCoordinates();else if(2===e){const o=this.svgSize/2;this.nodeCoords=[{x:this.svgSize/2-60,y:o},{x:this.svgSize/2+60,y:o}]}else this.generateCircularCoordinates()}generateBipartiteCoordinates(){const e=this.nodes.length,o=this.partitionByIndex.filter(f=>0===f).length,i=this.partitionByIndex.filter(f=>1===f).length,a=Math.min(80,Math.max(50,.4*this.svgSize/Math.max(Math.max(o,i)-1,1))),c=.2*this.svgSize,d=a,p=(this.svgSize-(o-1)*d)/2,g=.8*this.svgSize,x=a,_=(this.svgSize-(i-1)*x)/2;this.nodeCoords=new Array(e);let l=0,u=0;for(let f=0;f<e;f++)0===this.partitionByIndex[f]?(this.nodeCoords[f]={x:c,y:p+l*d},l++):(this.nodeCoords[f]={x:g,y:_+u*x},u++)}generateBipartiteVerticalCoordinates(){const e=this.nodes.length,o=this.rows,i=this.cols,n=.28*this.svgSize,s=.72*this.svgSize,a=this.svgSize/2,c=Math.max(o,i),g=Math.min(80,Math.max(50,.6*this.svgSize/Math.max(c-1,1))),x=a-(o-1)*g/2,_=a-(i-1)*g/2;this.nodeCoords=new Array(e);for(let l=0;l<o;l++)this.nodeCoords[l]={x:x+l*g,y:n};for(let l=0;l<i;l++)this.nodeCoords[o+l]={x:_+l*g,y:s}}generateCircularCoordinates(){const e=this.nodes.length,o=this.svgSize/2,i=this.svgSize/2,s=Math.max(120,this.svgSize/2-60);this.nodeCoords=this.nodes.map((a,c)=>{const d=2*Math.PI*c/Math.max(e,1)-Math.PI/2;return{x:o+s*Math.cos(d),y:i+s*Math.sin(d)}})}isNodeLeft(e){return this.bipartiteLayout&&0===this.partitionByIndex[e]}isNodeRight(e){return this.bipartiteLayout&&1===this.partitionByIndex[e]}ngOnInit(){}ngOnChanges(){this.showResult=!1}getLoopPath(e,o,i,n,s=28){const a=s,c=2*Math.PI*i/n-Math.PI/2;return`M${e} ${o} Q${e+a*Math.cos(c-Math.PI/6)} ${o+a*Math.sin(c-Math.PI/6)} ${e} ${o}`}getEdgePoint(e,o,i,n,s=28){const a=i-e,c=n-o,p=s/(Math.sqrt(a*a+c*c)||1);return{x:e+a*p,y:o+c*p}}getExpressiveLoopPath(e,o,i,n,s=28){const a=2*Math.PI*i/n-Math.PI/2,c=e+18*Math.cos(a),d=o+18*Math.sin(a),p=a-Math.PI/2;return`M${c} ${d} C${c+s*Math.cos(p)} ${d+s*Math.sin(p)},${c+s*Math.cos(p+Math.PI/3)} ${d+s*Math.sin(p+Math.PI/3)},${e+18*Math.cos(a+.5)} ${o+18*Math.sin(a+.5)}`}getPartitionOvals(){if(!this.bipartiteLayout||0===this.nodeCoords.length)return null;const e=this.nodeCoords.filter((l,u)=>0===this.partitionByIndex[u]),o=this.nodeCoords.filter((l,u)=>1===this.partitionByIndex[u]);if(0===e.length||0===o.length)return null;const s=Math.min(...e.map(l=>l.y)),a=Math.max(...e.map(l=>l.y)),c=Math.min(...e.map(l=>l.x)),d=Math.max(...e.map(l=>l.x)),p=Math.min(...o.map(l=>l.y)),g=Math.max(...o.map(l=>l.y)),x=Math.min(...o.map(l=>l.x)),_=Math.max(...o.map(l=>l.x));return{left:{x:(c+d)/2,y:(s+a)/2,width:Math.max(d-c+40,80),height:Math.max(a-s+40,80)},right:{x:(x+_)/2,y:(p+g)/2,width:Math.max(_-x+40,80),height:Math.max(g-p+40,80)}}}static{this.\u0275fac=function(o){return new(o||r)}}static{this.\u0275cmp=t.VBU({type:r,selectors:[["app-vector-to-graph"]],standalone:!0,features:[t.OA$,t.aNF],decls:17,vars:5,consts:[[1,"container"],[1,"input-group"],[1,"input-row"],["for","inputVector"],["placeholder","Enter logical vector (e.g., 0001, 0110, 0111, 1001, ...)","id","inputVector",2,"width","400px",3,"ngModel","ngModelChange","input","keydown.enter"],[2,"margin-left","12px"],["type","checkbox",3,"ngModel","ngModelChange"],["class","input-row",4,"ngIf"],[3,"click"],["class","error-message",4,"ngIf"],["class","result-container",3,"vertical-layout",4,"ngIf"],["for","rows"],["type","number","id","rows","min","1","max","32",3,"ngModel","ngModelChange"],["for","cols"],["type","number","id","cols","min","1","max","32",3,"ngModel","ngModelChange"],[1,"error-message"],[1,"result-container"],[4,"ngFor","ngForOf"],["id","arrow","markerWidth","6","markerHeight","6","refX","6","refY","3","orient","auto","markerUnits","strokeWidth"],["d","M0,0 L6,3 L0,6 Z","fill","#666"],["id","arrowSmall","markerWidth","4","markerHeight","4","refX","4","refY","2","orient","auto","markerUnits","strokeWidth"],["d","M0,0 L4,2 L0,4 Z","fill","#1976d2"],[1,"right-panel"],[1,"truth-table"],[2,"font-weight","bold","margin-bottom","8px","text-align","center"],[1,"reflexive-info"],[1,"info-label"],[1,"info-item"],[4,"ngIf"],[1,"graph-info"],["class","bipartite-info",4,"ngIf"],["r","18","stroke-width","3"],["r","11","fill","#fff"],[4,"ngIf","ngIfElse"],["loopTpl",""],["marker-end","url(#arrow)","stroke-width","2.5"],["stroke","#1976d2","stroke-width","3","fill","none","marker-end","url(#arrowSmall)",4,"ngIf"],["stroke","#1976d2","stroke-width","3","fill","none","marker-end","url(#arrowSmall)"],["text-anchor","middle","font-size","14",2,"pointer-events","none","font-weight","bold"],[2,"font-weight","bold"],[1,"bipartite-info"],[1,"partition-label"],[1,"partition-item"],[1,"partition-color","left-partition"],[1,"partition-color","right-partition"],[1,"bipartite-note"]],template:function(o,i){1&o&&(t.j41(0,"div",0)(1,"h2"),t.EFF(2,"Logical Vector to Graph"),t.k0s(),t.j41(3,"div",1)(4,"div",2)(5,"label",3),t.EFF(6,"Logical Vector:"),t.k0s(),t.j41(7,"input",4),t.bIt("ngModelChange",function(s){return i.inputVector=s})("input",function(){return i.onVectorChange()})("keydown.enter",function(){return i.onConvert()}),t.k0s(),t.j41(8,"label",5)(9,"input",6),t.bIt("ngModelChange",function(s){return i.forceBipartite=s}),t.k0s(),t.EFF(10," Bipartite layout "),t.k0s()(),t.DNE(11,v,7,2,"div",7),t.j41(12,"div",2)(13,"button",8),t.bIt("click",function(){return i.onConvert()}),t.EFF(14,"Convert"),t.k0s()()(),t.DNE(15,y,2,1,"div",9),t.DNE(16,$,37,20,"div",10),t.k0s()),2&o&&(t.R7$(7),t.Y8G("ngModel",i.inputVector),t.R7$(2),t.Y8G("ngModel",i.forceBipartite),t.R7$(2),t.Y8G("ngIf",i.showSizeInputs),t.R7$(4),t.Y8G("ngIf",i.error),t.R7$(1),t.Y8G("ngIf",i.showResult&&!i.error))},dependencies:[m.YN,m.me,m.Q0,m.Zm,m.BC,m.VZ,m.zX,m.vS,C.MD,C.Sq,C.bT],styles:['@charset "UTF-8";.container[_ngcontent-%COMP%]{padding:20px;max-width:1200px;margin:0 auto}h2[_ngcontent-%COMP%]{color:#1976d2;text-align:center;margin-bottom:24px}.input-group[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:16px;margin-bottom:16px;align-items:center;justify-content:center}.input-row[_ngcontent-%COMP%]{display:flex;align-items:center;gap:12px;flex-wrap:wrap;justify-content:center;transition:all .3s ease-in-out;overflow:hidden}.input-row.ng-enter[_ngcontent-%COMP%]{opacity:0;max-height:0}.input-row.ng-enter-active[_ngcontent-%COMP%], .input-row.ng-leave[_ngcontent-%COMP%]{opacity:1;max-height:60px}.input-row.ng-leave-active[_ngcontent-%COMP%]{opacity:0;max-height:0}.input-row[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-weight:700;color:#333;min-width:80px;display:inline-flex;align-items:center;margin-top:0}.size-inputs-header[_ngcontent-%COMP%]{width:100%;text-align:center;margin-bottom:8px}input[_ngcontent-%COMP%]{padding:8px 12px;border:2px solid #e0e0e0;border-radius:4px;font-size:14px;transition:border-color .3s}input[type=text][_ngcontent-%COMP%]{width:400px;max-width:80%}input[type=number][_ngcontent-%COMP%]{width:80px}input[_ngcontent-%COMP%]:focus{outline:none;border-color:#1976d2}button[_ngcontent-%COMP%]{background-color:#1976d2;color:#fff;border:none;padding:10px 20px;border-radius:4px;cursor:pointer;font-size:14px;transition:background-color .3s}button[_ngcontent-%COMP%]:hover{background-color:#1565c0}.error-message[_ngcontent-%COMP%]{color:red;margin-top:8px}.result-container[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:center;align-items:center;gap:40px;margin-top:24px;position:relative}.result-container.vertical-layout[_ngcontent-%COMP%]{flex-direction:column;align-items:center;gap:20px}.result-container.vertical-layout[_ngcontent-%COMP%]   .right-panel[_ngcontent-%COMP%]{margin-left:0;width:100%;max-width:800px;display:flex;gap:20px;justify-items:center}svg[_ngcontent-%COMP%]{box-shadow:0 2px 8px #0000001a;border-radius:8px;border:1px solid #ccc}.graph-type-info[_ngcontent-%COMP%]{position:absolute;top:80px;left:20px;background:#e8f5e8;padding:12px;border-radius:6px;border:2px solid #4caf50;box-shadow:0 2px 4px #0000001a;z-index:10}.right-panel[_ngcontent-%COMP%]{min-width:200px;margin-left:32px;display:flex;flex-direction:column;align-items:stretch}.graph-type-display[_ngcontent-%COMP%]{margin-bottom:16px;text-align:center;padding:12px;border-radius:6px;background:#f5f5f5}.bipartite-badge[_ngcontent-%COMP%]{color:#4caf50;font-weight:700;font-size:16px}.regular-badge[_ngcontent-%COMP%]{color:#ff9800;font-weight:700;font-size:16px}.truth-table[_ngcontent-%COMP%]{min-width:180px;display:flex;flex-direction:column;align-items:center}table[_ngcontent-%COMP%]{border-collapse:collapse;width:100%;box-shadow:0 2px 4px #0000001a}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{padding:6px 4px;text-align:center;border:1px solid #ddd}th[_ngcontent-%COMP%]{background-color:#f5f5f5;font-weight:700;color:#333}.reflexive-info[_ngcontent-%COMP%]{margin-top:16px;text-align:center;background:#fff3e0;padding:12px;border-radius:6px;border:2px solid #ff9800;box-shadow:0 2px 4px #0000001a}.graph-info[_ngcontent-%COMP%]{margin-top:16px;text-align:center;background:#e8f5e8;padding:12px;border-radius:6px;border:2px solid #4caf50;box-shadow:0 2px 4px #0000001a}.info-label[_ngcontent-%COMP%]{font-weight:700;margin-bottom:8px;color:#e65100}.info-item[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;gap:4px}.info-item[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%]{color:#e65100;font-size:16px}.info-item[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]{color:#666;font-style:italic}.bipartite-info[_ngcontent-%COMP%]{margin-top:16px;text-align:center;background:#f0f8f0;padding:12px;border-radius:6px;border:2px solid #4caf50;box-shadow:0 2px 4px #0000001a}.partition-label[_ngcontent-%COMP%]{font-weight:700;margin-bottom:8px;color:#2e7d32}.partition-item[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;margin:4px 0;gap:8px}.partition-color[_ngcontent-%COMP%]{width:16px;height:16px;border-radius:50%;border:2px solid #fff;box-shadow:0 1px 3px #0003}.left-partition[_ngcontent-%COMP%]{background-color:#2196f3}.right-partition[_ngcontent-%COMP%]{background-color:#4caf50}.bipartite-note[_ngcontent-%COMP%]{margin-top:8px;padding-top:8px;border-top:1px solid #4caf50;color:#666;font-style:italic}@media (max-width: 768px){.container[_ngcontent-%COMP%]{padding:10px}input[_ngcontent-%COMP%]{width:100%!important}.right-panel[_ngcontent-%COMP%]{margin-left:16px;min-width:160px}}']})}}return r})()}}]);